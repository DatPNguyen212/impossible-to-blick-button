{"mappings":"ACAA,MAAM,EAAS,SAAS,aAAa,CAAC,WAChC,EAAO,SAAS,aAAa,CAAC,QAEpC,EAAO,gBAAgB,CAAC,QAAS,AAAC,IAChC,MAAM,cACN,SAAS,MAAM,EACjB,GAGA,MAAM,EAAqB,EAAO,qBAAqB,GACvD,QAAQ,GAAG,CAAC,GAEZ,MAAM,EAAqB,EAAK,qBAAqB,GAM/C,EAAgB,EAAmB,KAAK,CAAG,EAHlC,GAIT,EAAgB,EAAmB,MAAM,CAAG,EAJnC,GAMf,QAAQ,GAAG,CAAC,EAAe,GAE3B,SAAS,gBAAgB,CAAC,YAAa,AAAC,IACtC,IAAM,EAAS,EAAM,KAAK,CACpB,EAAS,EAAM,KAAK,CAIpB,EAAqB,EAAO,qBAAqB,GACvD,QAAQ,GAAG,CAAC,GAGZ,IAAM,EAAgB,EAAmB,IAAI,CAAG,EAAmB,KAAK,CAAG,EAErE,EAAgB,EAAmB,GAAG,CAAG,EAAmB,MAAM,CAAG,EAKrE,EAwCC,AAxCuB,EAAQ,EAChC,EAuCC,AAvCuB,EAAQ,EAEtC,QAAQ,GAAG,CAAC,EAAW,GAIrB,KAAK,GAAG,CAAC,IAAc,GACvB,KAAK,GAAG,CAAC,IAAc,IAEvB,EAAO,KAAK,CAAC,IAAI,CAAG,CAAC,EACnB,EAAmB,IAAI,CAAI,EAAgB,EAAa,GACzD,EAAE,CAAC,CAEJ,EAAO,KAAK,CAAC,GAAG,CAAG,CAAC,EAClB,EAAmB,GAAG,CAAI,EAAgB,EAAa,GACxD,EAAE,CAAC,EAGU,EAAe,EAAmB,KAAK,EAAK,GAC1D,CAAA,EAAO,KAAK,CAAC,IAAI,CAAG,CAAC,EAAE,EAAmB,IAAI,CAAG,EAAc,EAAE,CAAC,AAAD,EAER,GAkBpD,AAlBS,EAAe,EAAmB,IAAI,EACpD,CAAA,EAAO,KAAK,CAAC,IAAI,CAAG,CAAC,EACnB,EAAmB,KAAK,CAAG,EAAmB,KAAK,CAAG,EACvD,EAAE,CAAC,AAAD,EAGqD,GAYnD,AAZS,EAAe,EAAmB,GAAG,EACnD,CAAA,EAAO,KAAK,CAAC,GAAG,CAAG,CAAC,EAClB,EAAmB,MAAM,CAAG,EAAmB,MAAM,CAAG,EACzD,EAAE,CAAC,AAAD,EAGW,EAAe,EAAmB,MAAM,EAAK,GAC3D,CAAA,EAAO,KAAK,CAAC,GAAG,CAAG,CAAC,EAAE,EAAmB,GAAG,CAAG,EAAc,EAAE,CAAC,AAAD,CAEnE","sources":["<anon>","src/script.js"],"sourcesContent":["const button = document.querySelector(\".button\");\nconst body = document.querySelector(\"body\");\nbutton.addEventListener(\"click\", (event)=>{\n    alert(\"Smart one!\");\n    location.reload();\n});\n// Get size and position of button and winddow:\nconst buttonSizePosition = button.getBoundingClientRect();\nconsole.log(buttonSizePosition);\nconst windowSizePosition = body.getBoundingClientRect();\n// Offset value distance from button's sides (not including button's size) where button will start moving\nconst offset = 50;\n// Offset distance between button center and pointer(includes button's size)\nconst xButtonOffset = buttonSizePosition.width / 2 + offset;\nconst yButtonOffset = buttonSizePosition.height / 2 + offset;\nconsole.log(xButtonOffset, yButtonOffset);\ndocument.addEventListener(\"mousemove\", (event)=>{\n    const mouseX = event.pageX;\n    const mouseY = event.pageY;\n    // console.log(mouseX, mouseY)\n    // get current size and position of button:\n    const buttonSizePosition = button.getBoundingClientRect();\n    console.log(buttonSizePosition);\n    // get current button center position\n    const buttonCenterX = buttonSizePosition.left + buttonSizePosition.width / 2;\n    const buttonCenterY = buttonSizePosition.top + buttonSizePosition.height / 2;\n    // console.log(buttonCenterX, buttonCenterY)\n    // Distance Mouse to Button Center\n    const xDistMToB = getDistance(mouseX, buttonCenterX);\n    const yDistMToB = getDistance(mouseY, buttonCenterY);\n    console.log(xDistMToB, yDistMToB);\n    // need absolute to turn negative distance to positive, because X and Y is based on top left corner of screen, when 2 things subtract, depending on the order, you can get negative value.\n    if (Math.abs(xDistMToB) <= xButtonOffset && Math.abs(yDistMToB) <= yButtonOffset) {\n        button.style.left = `${buttonSizePosition.left - xButtonOffset / xDistMToB * 10}px`;\n        button.style.top = `${buttonSizePosition.top - yButtonOffset / yDistMToB * 10}px`;\n    }\n    if (getDistance(buttonCenterX, windowSizePosition.right) >= 0) button.style.left = `${windowSizePosition.left + xButtonOffset}px`;\n    if (getDistance(buttonCenterX, windowSizePosition.left) <= 0) button.style.left = `${windowSizePosition.right - buttonSizePosition.width - xButtonOffset}px`;\n    if (getDistance(buttonCenterY, windowSizePosition.top) <= 0) button.style.top = `${windowSizePosition.bottom - buttonSizePosition.height - yButtonOffset}px`;\n    if (getDistance(buttonCenterY, windowSizePosition.bottom) >= 0) button.style.top = `${windowSizePosition.top + yButtonOffset}px`;\n});\nfunction getDistance(objectOne, objectTwo) {\n    return objectOne - objectTwo;\n}\n\n//# sourceMappingURL=index.634472ba.js.map\n","const button = document.querySelector('.button')\r\nconst body = document.querySelector('body')\r\n\r\nbutton.addEventListener('click', (event) => {\r\n  alert('Smart one!')\r\n  location.reload()\r\n})\r\n\r\n// Get size and position of button and winddow:\r\nconst buttonSizePosition = button.getBoundingClientRect()\r\nconsole.log(buttonSizePosition)\r\n\r\nconst windowSizePosition = body.getBoundingClientRect()\r\n\r\n// Offset value distance from button's sides (not including button's size) where button will start moving\r\nconst offset = 50\r\n\r\n// Offset distance between button center and pointer(includes button's size)\r\nconst xButtonOffset = buttonSizePosition.width / 2 + offset\r\nconst yButtonOffset = buttonSizePosition.height / 2 + offset\r\n\r\nconsole.log(xButtonOffset, yButtonOffset)\r\n\r\ndocument.addEventListener('mousemove', (event) => {\r\n  const mouseX = event.pageX\r\n  const mouseY = event.pageY\r\n  // console.log(mouseX, mouseY)\r\n\r\n  // get current size and position of button:\r\n  const buttonSizePosition = button.getBoundingClientRect()\r\n  console.log(buttonSizePosition)\r\n\r\n  // get current button center position\r\n  const buttonCenterX = buttonSizePosition.left + buttonSizePosition.width / 2\r\n\r\n  const buttonCenterY = buttonSizePosition.top + buttonSizePosition.height / 2\r\n\r\n  // console.log(buttonCenterX, buttonCenterY)\r\n\r\n  // Distance Mouse to Button Center\r\n  const xDistMToB = getDistance(mouseX, buttonCenterX)\r\n  const yDistMToB = getDistance(mouseY, buttonCenterY)\r\n\r\n  console.log(xDistMToB, yDistMToB)\r\n\r\n  // need absolute to turn negative distance to positive, because X and Y is based on top left corner of screen, when 2 things subtract, depending on the order, you can get negative value.\r\n  if (\r\n    Math.abs(xDistMToB) <= xButtonOffset &&\r\n    Math.abs(yDistMToB) <= yButtonOffset\r\n  ) {\r\n    button.style.left = `${\r\n      buttonSizePosition.left - (xButtonOffset / xDistMToB) * 10\r\n    }px`\r\n\r\n    button.style.top = `${\r\n      buttonSizePosition.top - (yButtonOffset / yDistMToB) * 10\r\n    }px`\r\n  }\r\n\r\n  if (getDistance(buttonCenterX, windowSizePosition.right) >= 0) {\r\n    button.style.left = `${windowSizePosition.left + xButtonOffset}px`\r\n  }\r\n  if (getDistance(buttonCenterX, windowSizePosition.left) <= 0) {\r\n    button.style.left = `${\r\n      windowSizePosition.right - buttonSizePosition.width - xButtonOffset\r\n    }px`\r\n  }\r\n\r\n  if (getDistance(buttonCenterY, windowSizePosition.top) <= 0) {\r\n    button.style.top = `${\r\n      windowSizePosition.bottom - buttonSizePosition.height - yButtonOffset\r\n    }px`\r\n  }\r\n\r\n  if (getDistance(buttonCenterY, windowSizePosition.bottom) >= 0) {\r\n    button.style.top = `${windowSizePosition.top + yButtonOffset}px`\r\n  }\r\n})\r\n\r\nfunction getDistance(objectOne, objectTwo) {\r\n  return objectOne - objectTwo\r\n}\r\n"],"names":["button","document","querySelector","body","addEventListener","event","alert","location","reload","buttonSizePosition","getBoundingClientRect","console","log","windowSizePosition","xButtonOffset","width","yButtonOffset","height","mouseX","pageX","mouseY","pageY","buttonCenterX","left","buttonCenterY","top","xDistMToB","objectOne","yDistMToB","Math","abs","style","right","bottom"],"version":3,"file":"index.634472ba.js.map"}